(* A simple example using while loops in combination with references. *)
let isPrime = fun n -> 
  let foundDivisible = ref false in 
  let current = ref (n - 1) in 
  if n = 1 then false else
    let isDivBy = fun a b -> (a / b) * b = a in 
    while (!current) > 1 do 
      foundDivisible := (!foundDivisible || (isDivBy n (!current)));
      current := !current - 1
    done;
    ~ !foundDivisible
in 
isPrime 13
(* Should output true *)